apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: workflow-rbac-sa
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: workflow-rbac-role
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: workflow-rbac-binding
subjects:
- kind: ServiceAccount
  namespace: default
  name: workflow-rbac-sa
roleRef:
  kind: Role
  name: workflow-rbac-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-env-data
  namespace: default
data:
  HELLO: world
---
apiVersion: kubeci.kube.ci/v1alpha1
kind: Workflow
metadata:
  name: wf-json-path
  namespace: default
spec:
  triggers:
  - apiVersion: v1
    kind: ConfigMap
    resource: configmaps
    namespace: default
    name: my-config
    onCreateOrUpdate: true
    onDelete: false
    envFromPath:
      META_NAME: '{$.metadata.name}'
  serviceAccount: workflow-rbac-sa
  envFrom:
  - configMapRef:
      name: my-env-data
  steps:
  - name: step-echo
    image: alpine
    commands:
    - sh
    args:
    - -c
    - echo $META_NAME; echo $HELLO
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-config
  namespace: default
data:
  example.property.1: hello
  example.property.2: world