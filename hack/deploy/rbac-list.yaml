apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: git-apiserver
  labels:
    app: kubeci
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups:
  - extensions
  resources:
  - thirdpartyresources
  verbs:
  - "*"
- apiGroups:
  - git.kube.ci
  resources: ["*"]
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch", "create", "delete", "patch"]
- apiGroups:
  - extensions
  resources:
  - replicasets
  - daemonsets
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources:
  - namespaces
  - replicationcontrollers
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["create", "update", "get", "delete"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list"]
- apiGroups: [""]
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list", "delete", "deletecollection"]
- apiGroups: [""]
  resources:
  - serviceaccounts
  verbs: ["get", "create", "patch", "delete"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - roles
  - rolebindings
  verbs: ["get", "create", "delete", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: git-apiserver
  labels:
    app: kubeci
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: git-apiserver
subjects:
- kind: ServiceAccount
  name: ${GIT_APISERVER_SERVICE_ACCOUNT}
  namespace: ${GIT_APISERVER_NAMESPACE}
---
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeci-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    app: kubeci
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: ${GIT_APISERVER_SERVICE_ACCOUNT}
  namespace: ${GIT_APISERVER_NAMESPACE}
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeci-apiserver-auth-delegator
  labels:
    app: kubeci
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: ${GIT_APISERVER_SERVICE_ACCOUNT}
  namespace: ${GIT_APISERVER_NAMESPACE}
